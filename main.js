!function(){"use strict";class e{constructor(e){this._modalSelector=e,this._modalElement=document.querySelector(e),this._modalCloseButton=this._modalElement.querySelector(".modal__close")}open(){this._modalElement.classList.add("modal__opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._modalElement.classList.remove("modal__opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._modalElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()})),this._modalCloseButton.addEventListener("click",(e=>{this.close()}))}}class t extends e{constructor(e,t){super(e),this._handleFormSubmit=t,this._formInputs=this._modalElement.querySelectorAll(".modal__input"),this._formElement=this._modalElement.querySelector(".modal__form")}_getInputValues(){const e={};return this._formInputs.forEach((t=>{e[t.name]=t.value})),e}close(){super.close(),this._formElement.reset()}setEventListeners(){this._formElement.addEventListener("submit",(()=>{this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}}class s{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._cardElement.querySelector(".card__heart-button").addEventListener("click",(()=>this._handleLikeButton())),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>this._handleDeleteCard())),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick(this)}))}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_handleLikeButton(){this._cardElement.querySelector(".card__heart-button").classList.toggle("card__heart-button_active")}getCardEl(){this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0);const e=this._cardElement.querySelector(".card__image");return this._cardElement.querySelector(".card__title").textContent=this._name,e.setAttribute("alt",this._name),e.setAttribute("src",this._link),this._setEventListeners(),this._cardElement}}class o{constructor(e,t){this._formEl=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formInputs=Array.from(this._formEl.querySelectorAll(this._inputSelector)),this._buttonEl=this._formEl.querySelector(this._submitButtonSelector)}_showErrorMessage(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this.errorClass)}_hideErrorMessage(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_disableButton(){this._buttonEl.classList.add(this._inactiveButtonClass),this._buttonEl.setAttribute("disabled","")}_enableButton(){this._buttonEl.classList.remove(this._inactiveButtonClass),this._buttonEl.removeAttribute("disabled")}_hasInvalidInputs(){return this._formInputs.some((e=>!e.validity.valid||!e.value))}_checkInputValidity(e){e.validity.valid?this._hideErrorMessage(e):this._showErrorMessage(e)}resetModalValidity(){this._disableButton(),this._formInputs.forEach((e=>{this._hideErrorMessage(e)}))}toggleButtonState(){this._hasInvalidInputs(this._formInputs)?this._disableButton():this._enableButton()}_setEventListeners(){this.toggleButtonState(),this._formInputs.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}const i={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__input-error_visible"},r=console.log.bind(console),n=document.querySelector("#profile-edit-button"),a=document.querySelector("#profile-edit-modal"),l=document.querySelector(".profile__title"),d=document.querySelector(".profile__description"),c=document.querySelector("#edit_modal-input-name"),m=document.querySelector("#edit-modal-input-desc"),u=a.querySelector(".modal__form"),_=document.querySelector(".cards__list"),h=document.querySelector("#card-add-modal"),f=document.querySelector("#card-add-button"),p=h.querySelector(".modal__form"),E=new class{constructor(e,t){this._nameElement=e,this._jobElement=t}getUserInfo(){const e={};return e.profileName=this._nameElement.textContent,e.description=this._jobElement.textContent,e}setUserInfo(e,t){console.log(this._nameElement),this._nameElement.textContent=e,this._jobElement.textContent=t}}(l,d),b=new class{constructor(e,t){let{items:s,renderer:o}=e;this._items=s,this._renderer=o,this._container=t}addItem(e){this._container.prepend(e)}renderItems(){this._items.forEach(this._renderer)}}({items:[{name:"NEOM Nature Reserve, Saudi Arabia",link:"https://images.unsplash.com/photo-1682687982204-f1a77dcc3067?ixlib=rb-4.0.3&ixid=M3wxMjA3fDF8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=3387&q=80"},{name:"Aragnouet, France",link:"https://images.unsplash.com/photo-1693333494237-f16ec989d14d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=3540&q=80"},{name:"Stari Grad, Croatia",link:"https://images.unsplash.com/photo-1693035647252-8ee896fb754a?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=3532&q=80"},{name:"Toronto, ON, Canada",link:"https://images.unsplash.com/photo-1693126400167-704cbf4a3f16?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=3536&q=80"},{name:"Hanoi, Vietnam",link:"https://images.unsplash.com/photo-1692872031707-4214d2f62adc?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=3264&q=80"},{name:"Alpae di Siusi, Italia",link:"https://images.unsplash.com/photo-1693137161234-c00bc97fe482?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=3448&q=80"}],renderer:e=>{const t=C(e);b.addItem(t)}},_),v=new t("#profile-edit-modal",(function(e){E.setUserInfo(e.title,e.description),v.close()})),S=new t("#card-add-modal",(function(e){const{title:t,url:s}=e,o=C({name:t,link:s});b.addItem(o),S.close()})),y=new class extends e{constructor(e){super(e),this._prevImageCaption=this._modalElement.querySelector(".modal__preview-image-caption"),this._prevModalImage=this._modalElement.querySelector(".modal__prev-image")}open(e){this._prevModalImage.src=e._link,this._prevModalImage.alt=e._name,this._prevImageCaption.textContent=e._name,super.open()}}("#image-preview-modal"),x=new o(i,u),g=new o(i,p);function w(e){y.open(e)}function C(e){return new s(e,"#card-template",w).getCardEl()}x.enableValidation(),g.enableValidation(),b.renderItems(),v.setEventListeners(),S.setEventListeners(),y.setEventListeners(),n.addEventListener("click",(()=>{const{profileName:e,description:t}=E.getUserInfo();c.value=e,m.value=t,x.resetModalValidity(),v.open()})),f.addEventListener("click",(()=>{g.resetModalValidity(),S.open()})),r("console log bind test")}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Z0YsRUFDMUJaLEVBQWtCcEUsTUFBUWlGLEVBQzFCOEIsRUFBa0IxRCxxQkFDbEIrQyxFQUFjOUgsTUFBTSxJQUl0QmtHLEVBQVcvRixpQkFBaUIsU0FBUyxLQUNuQ3VJLEVBQWlCM0QscUJBQ2pCa0QsRUFBYWpJLE1BQU0sSUFHckJxRixFQUFHLHdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKG1vZGFsU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9tb2RhbFNlbGVjdG9yID0gbW9kYWxTZWxlY3RvcjtcbiAgICB0aGlzLl9tb2RhbEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKG1vZGFsU2VsZWN0b3IpO1xuICAgIHRoaXMuX21vZGFsQ2xvc2VCdXR0b24gPSB0aGlzLl9tb2RhbEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2xvc2VcIik7XG4gIH1cblxuICBvcGVuKCkge1xuICAgIHRoaXMuX21vZGFsRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwibW9kYWxfX29wZW5lZFwiKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICB0aGlzLl9tb2RhbEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShcIm1vZGFsX19vcGVuZWRcIik7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICB9XG5cbiAgX2hhbmRsZUVzY0Nsb3NlID0gKGV2dCkgPT4ge1xuICAgIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICB9O1xuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX21vZGFsRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIChlKSA9PiB7XG4gICAgICBpZiAoXG4gICAgICAgIGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcIm1vZGFsXCIpIHx8XG4gICAgICAgIGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcIm1vZGFsX19jbG9zZVwiKVxuICAgICAgKSB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICB0aGlzLl9tb2RhbENsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH0pO1xuICB9XG59XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKG1vZGFsU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQpIHtcbiAgICBzdXBlcihtb2RhbFNlbGVjdG9yKTtcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcbiAgICB0aGlzLl9mb3JtSW5wdXRzID0gdGhpcy5fbW9kYWxFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxfX2lucHV0XCIpO1xuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gdGhpcy5fbW9kYWxFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XG4gIH1cblxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XG4gICAgY29uc3QgaW5wdXRWYWx1ZXMgPSB7fTtcbiAgICB0aGlzLl9mb3JtSW5wdXRzLmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICBpbnB1dFZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xuICAgIH0pO1xuICAgIHJldHVybiBpbnB1dFZhbHVlcztcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHN1cGVyLmNsb3NlKCk7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQucmVzZXQoKTtcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2Zvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcbiAgICB9KTtcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBDYXJkIHtcbiAgY29uc3RydWN0b3IoZGF0YSwgY2FyZFNlbGVjdG9yLCBoYW5kbGVJbWFnZUNsaWNrKSB7XG4gICAgdGhpcy5fbmFtZSA9IGRhdGEubmFtZTtcbiAgICB0aGlzLl9saW5rID0gZGF0YS5saW5rO1xuICAgIHRoaXMuX2NhcmRTZWxlY3RvciA9IGNhcmRTZWxlY3RvcjtcbiAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrID0gaGFuZGxlSW1hZ2VDbGljaztcbiAgfVxuXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICAvL2NhcmQgXCJsaWtlXCIgYnV0dG9uXG4gICAgdGhpcy5fY2FyZEVsZW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2hlYXJ0LWJ1dHRvblwiKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB0aGlzLl9oYW5kbGVMaWtlQnV0dG9uKCkpO1xuICAgIC8vY2FyZCBcImRlbGV0ZVwiIGJ1dHRvblxuICAgIHRoaXMuX2NhcmRFbGVtZW50XG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX19kZWxldGUtYnV0dG9uXCIpXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHRoaXMuX2hhbmRsZURlbGV0ZUNhcmQoKSk7XG4gICAgLy9wcmV2IGltYWdlIGNsaWNrXG4gICAgdGhpcy5fY2FyZEVsZW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltYWdlXCIpXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgdGhpcy5faGFuZGxlSW1hZ2VDbGljayh0aGlzKTtcbiAgICAgIH0pO1xuICB9XG5cbiAgX2hhbmRsZURlbGV0ZUNhcmQoKSB7XG4gICAgdGhpcy5fY2FyZEVsZW1lbnQucmVtb3ZlKCk7XG4gICAgdGhpcy5fY2FyZEVsZW1lbnQgPSBudWxsO1xuICB9XG5cbiAgX2hhbmRsZUxpa2VCdXR0b24oKSB7XG4gICAgdGhpcy5fY2FyZEVsZW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2hlYXJ0LWJ1dHRvblwiKVxuICAgICAgLmNsYXNzTGlzdC50b2dnbGUoXCJjYXJkX19oZWFydC1idXR0b25fYWN0aXZlXCIpO1xuICB9XG5cbiAgZ2V0Q2FyZEVsKCkge1xuICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRTZWxlY3RvcilcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZFwiKVxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcbiAgICBjb25zdCBjYXJkSW1hZ2VFbCA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIik7XG4gICAgY29uc3QgY2FyZFRpdGxlRWwgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3RpdGxlXCIpO1xuXG4gICAgY2FyZFRpdGxlRWwudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xuICAgIGNhcmRJbWFnZUVsLnNldEF0dHJpYnV0ZShcImFsdFwiLCB0aGlzLl9uYW1lKTtcbiAgICBjYXJkSW1hZ2VFbC5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgdGhpcy5fbGluayk7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuICAgIHJldHVybiB0aGlzLl9jYXJkRWxlbWVudDtcbiAgfVxufVxuIiwiZXhwb3J0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3Rvcih2YWxpZGF0aW9uU2V0dGluZ3MsIGZvcm1FbCkge1xuICAgIHRoaXMuX2Zvcm1FbCA9IGZvcm1FbDtcbiAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gdmFsaWRhdGlvblNldHRpbmdzLmlucHV0U2VsZWN0b3I7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSB2YWxpZGF0aW9uU2V0dGluZ3Muc3VibWl0QnV0dG9uU2VsZWN0b3I7XG4gICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IHZhbGlkYXRpb25TZXR0aW5ncy5pbmFjdGl2ZUJ1dHRvbkNsYXNzO1xuICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IHZhbGlkYXRpb25TZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3M7XG4gICAgdGhpcy5fZXJyb3JDbGFzcyA9IHZhbGlkYXRpb25TZXR0aW5ncy5lcnJvckNsYXNzO1xuXG4gICAgdGhpcy5fZm9ybUlucHV0cyA9IEFycmF5LmZyb20oXG4gICAgICB0aGlzLl9mb3JtRWwucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKVxuICAgICk7XG5cbiAgICB0aGlzLl9idXR0b25FbCA9IHRoaXMuX2Zvcm1FbC5xdWVyeVNlbGVjdG9yKHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcbiAgfVxuXG4gIF9zaG93RXJyb3JNZXNzYWdlKGZvcm1JbnB1dCkge1xuICAgIGNvbnN0IGVycm9yTWVzc2FnZUVsID0gdGhpcy5fZm9ybUVsLnF1ZXJ5U2VsZWN0b3IoYCMke2Zvcm1JbnB1dC5pZH0tZXJyb3JgKTtcbiAgICBmb3JtSW5wdXQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yTWVzc2FnZUVsLnRleHRDb250ZW50ID0gZm9ybUlucHV0LnZhbGlkYXRpb25NZXNzYWdlO1xuICAgIGVycm9yTWVzc2FnZUVsLmNsYXNzTGlzdC5hZGQodGhpcy5lcnJvckNsYXNzKTtcbiAgfVxuXG4gIF9oaWRlRXJyb3JNZXNzYWdlKGZvcm1JbnB1dCkge1xuICAgIGNvbnN0IGVycm9yTWVzc2FnZUVsID0gdGhpcy5fZm9ybUVsLnF1ZXJ5U2VsZWN0b3IoYCMke2Zvcm1JbnB1dC5pZH0tZXJyb3JgKTtcbiAgICBmb3JtSW5wdXQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yTWVzc2FnZUVsLnRleHRDb250ZW50ID0gXCJcIjtcbiAgICBlcnJvck1lc3NhZ2VFbC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yQ2xhc3MpO1xuICB9XG5cbiAgX2Rpc2FibGVCdXR0b24oKSB7XG4gICAgdGhpcy5fYnV0dG9uRWwuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICB0aGlzLl9idXR0b25FbC5zZXRBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiLCBcIlwiKTtcbiAgfVxuXG4gIF9lbmFibGVCdXR0b24oKSB7XG4gICAgdGhpcy5fYnV0dG9uRWwuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICB0aGlzLl9idXR0b25FbC5yZW1vdmVBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKTtcbiAgfVxuXG4gIF9oYXNJbnZhbGlkSW5wdXRzKCkge1xuICAgIHJldHVybiB0aGlzLl9mb3JtSW5wdXRzLnNvbWUoKGZvcm1JbnB1dCkgPT4ge1xuICAgICAgcmV0dXJuICFmb3JtSW5wdXQudmFsaWRpdHkudmFsaWQgfHwgIWZvcm1JbnB1dC52YWx1ZTtcbiAgICB9KTtcbiAgfVxuXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoZm9ybUlucHV0KSB7XG4gICAgaWYgKCFmb3JtSW5wdXQudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgIHRoaXMuX3Nob3dFcnJvck1lc3NhZ2UoZm9ybUlucHV0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5faGlkZUVycm9yTWVzc2FnZShmb3JtSW5wdXQpO1xuICAgIH1cbiAgfVxuXG4gIHJlc2V0TW9kYWxWYWxpZGl0eSgpIHtcbiAgICB0aGlzLl9kaXNhYmxlQnV0dG9uKCk7XG4gICAgdGhpcy5fZm9ybUlucHV0cy5mb3JFYWNoKChmb3JtSW5wdXQpID0+IHtcbiAgICAgIHRoaXMuX2hpZGVFcnJvck1lc3NhZ2UoZm9ybUlucHV0KTtcbiAgICB9KTtcbiAgfVxuXG4gIHRvZ2dsZUJ1dHRvblN0YXRlKCkge1xuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXRzKHRoaXMuX2Zvcm1JbnB1dHMpKSB7XG4gICAgICB0aGlzLl9kaXNhYmxlQnV0dG9uKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2VuYWJsZUJ1dHRvbigpO1xuICAgIH1cbiAgfVxuXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLnRvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgdGhpcy5fZm9ybUlucHV0cy5mb3JFYWNoKChmb3JtSW5wdXQpID0+IHtcbiAgICAgIGZvcm1JbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoZm9ybUlucHV0KTtcbiAgICAgICAgdGhpcy50b2dnbGVCdXR0b25TdGF0ZSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xuICAgIHRoaXMuX2Zvcm1FbC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH0pO1xuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcbiAgZm9ybVNlbGVjdG9yOiBcIi5tb2RhbF9fZm9ybVwiLFxuICBpbnB1dFNlbGVjdG9yOiBcIi5tb2RhbF9faW5wdXRcIixcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19idXR0b25cIixcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJtb2RhbF9fYnV0dG9uX2Rpc2FibGVkXCIsXG4gIGlucHV0RXJyb3JDbGFzczogXCJtb2RhbF9faW5wdXRfdHlwZV9lcnJvclwiLFxuICBlcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dC1lcnJvcl92aXNpYmxlXCIsXG59O1xuIiwiaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xuaW1wb3J0IHsgaW5pdGlhbENhcmRzIH0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xuaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xuaW1wb3J0IENhcmQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xuaW1wb3J0IHsgRm9ybVZhbGlkYXRvciwgY29uZmlnIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBWYXJpYWJsZXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbmNvbnN0IGNsID0gY29uc29sZS5sb2cuYmluZChjb25zb2xlKTtcblxuY29uc3QgcHJvZkVkaXRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtZWRpdC1idXR0b25cIik7XG5jb25zdCBwcm9mRWRpdE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWVkaXQtbW9kYWxcIik7XG5jb25zdCBwcm9mVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX3RpdGxlXCIpO1xuY29uc3QgcHJvZkRlc2MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCIpO1xuY29uc3QgcHJvZkVkaXROYW1lSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2VkaXRfbW9kYWwtaW5wdXQtbmFtZVwiKTtcbmNvbnN0IHByb2ZFZGl0RGVzY0lucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNlZGl0LW1vZGFsLWlucHV0LWRlc2NcIik7XG5jb25zdCBwcm9mRWRpdEZvcm0gPSBwcm9mRWRpdE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XG5cbmNvbnN0IGNhcmRMaXN0RWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzX19saXN0XCIpO1xuY29uc3QgY2FyZEFkZE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjYXJkLWFkZC1tb2RhbFwiKTtcbmNvbnN0IGNhcmRBZGRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NhcmQtYWRkLWJ1dHRvblwiKTtcbmNvbnN0IGNhcmRBZGRGb3JtID0gY2FyZEFkZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvb3BzICYgQ2xhc3MgSW5zdGFuY2VzICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHByb2ZUaXRsZSwgcHJvZkRlc2MpO1xuXG5jb25zdCBzZWN0aW9uID0gbmV3IFNlY3Rpb24oXG4gIHtcbiAgICBpdGVtczogaW5pdGlhbENhcmRzLFxuICAgIHJlbmRlcmVyOiAoaXRlbSkgPT4ge1xuICAgICAgY29uc3QgY2FyZEVsZW1lbnQgPSByZW5kZXJDYXJkKGl0ZW0pO1xuICAgICAgc2VjdGlvbi5hZGRJdGVtKGNhcmRFbGVtZW50KTtcbiAgICB9LFxuICB9LFxuICBjYXJkTGlzdEVsXG4pO1xuXG5jb25zdCBlZGl0UHJvZk1vZGFsID0gbmV3IFBvcHVwV2l0aEZvcm0oXG4gIFwiI3Byb2ZpbGUtZWRpdC1tb2RhbFwiLFxuICBoYW5kbGVQcm9mRWRpdFN1Ym1pdFxuKTtcblxuY29uc3QgYWRkQ2FyZE1vZGFsID0gbmV3IFBvcHVwV2l0aEZvcm0oXCIjY2FyZC1hZGQtbW9kYWxcIiwgaGFuZGxlQWRkQ2FyZFN1Ym1pdCk7XG5cbmNvbnN0IHByZXZJbWFnZU1vZGFsID0gbmV3IFBvcHVwV2l0aEltYWdlKFwiI2ltYWdlLXByZXZpZXctbW9kYWxcIik7XG5cbmNvbnN0IGVkaXRGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoY29uZmlnLCBwcm9mRWRpdEZvcm0pO1xuXG5jb25zdCBhZGRGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoY29uZmlnLCBjYXJkQWRkRm9ybSk7XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGdW5jdGlvbnMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuZnVuY3Rpb24gaGFuZGxlSW1hZ2VDbGljayhjYXJkRGF0YSkge1xuICBwcmV2SW1hZ2VNb2RhbC5vcGVuKGNhcmREYXRhKTtcbn1cblxuZnVuY3Rpb24gcmVuZGVyQ2FyZChjYXJkRGF0YSkge1xuICBjb25zdCBjYXJkID0gbmV3IENhcmQoY2FyZERhdGEsIFwiI2NhcmQtdGVtcGxhdGVcIiwgaGFuZGxlSW1hZ2VDbGljayk7XG4gIHJldHVybiBjYXJkLmdldENhcmRFbCgpO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVQcm9mRWRpdFN1Ym1pdChwcm9maWxlRGF0YSkge1xuICAvLyBlLnByZXZlbnREZWZhdWx0KCk7XG4gIHVzZXJJbmZvLnNldFVzZXJJbmZvKHByb2ZpbGVEYXRhLnRpdGxlLCBwcm9maWxlRGF0YS5kZXNjcmlwdGlvbik7XG4gIGVkaXRQcm9mTW9kYWwuY2xvc2UoKTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlQWRkQ2FyZFN1Ym1pdChpbnB1dFZhbHVlcykge1xuICAvLyBlLnByZXZlbnREZWZhdWx0KCk7XG4gIGNvbnN0IHsgdGl0bGUsIHVybCB9ID0gaW5wdXRWYWx1ZXM7XG4gIGNvbnN0IGNhcmQgPSByZW5kZXJDYXJkKHsgbmFtZTogdGl0bGUsIGxpbms6IHVybCB9KTtcbiAgc2VjdGlvbi5hZGRJdGVtKGNhcmQpO1xuICBhZGRDYXJkTW9kYWwuY2xvc2UoKTtcbn1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZ1bmN0aW9uIENhbGxzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5lZGl0Rm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5cbmFkZEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xuXG5zZWN0aW9uLnJlbmRlckl0ZW1zKCk7XG5cbmVkaXRQcm9mTW9kYWwuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuYWRkQ2FyZE1vZGFsLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbnByZXZJbWFnZU1vZGFsLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFByb2ZpbGUgQnV0dG9uIExpc3RlbmVycyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cbnByb2ZFZGl0QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIGNvbnN0IHsgcHJvZmlsZU5hbWUsIGRlc2NyaXB0aW9uIH0gPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xuICBwcm9mRWRpdE5hbWVJbnB1dC52YWx1ZSA9IHByb2ZpbGVOYW1lO1xuICBwcm9mRWRpdERlc2NJbnB1dC52YWx1ZSA9IGRlc2NyaXB0aW9uO1xuICBlZGl0Rm9ybVZhbGlkYXRvci5yZXNldE1vZGFsVmFsaWRpdHkoKTtcbiAgZWRpdFByb2ZNb2RhbC5vcGVuKCk7XG59KTtcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gQ2FyZCBCdXR0b24gTGlzdGVuZXJzIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbmNhcmRBZGRCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgYWRkRm9ybVZhbGlkYXRvci5yZXNldE1vZGFsVmFsaWRpdHkoKTtcbiAgYWRkQ2FyZE1vZGFsLm9wZW4oKTtcbn0pO1xuXG5jbChcImNvbnNvbGUgbG9nIGJpbmQgdGVzdFwiKTtcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcbiAgY29uc3RydWN0b3IobmFtZUVsZW1lbnQsIGpvYkVsZW1lbnQpIHtcbiAgICB0aGlzLl9uYW1lRWxlbWVudCA9IG5hbWVFbGVtZW50O1xuICAgIHRoaXMuX2pvYkVsZW1lbnQgPSBqb2JFbGVtZW50O1xuICB9XG5cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgY29uc3QgZGF0YSA9IHt9O1xuICAgIGRhdGEucHJvZmlsZU5hbWUgPSB0aGlzLl9uYW1lRWxlbWVudC50ZXh0Q29udGVudDtcbiAgICBkYXRhLmRlc2NyaXB0aW9uID0gdGhpcy5fam9iRWxlbWVudC50ZXh0Q29udGVudDtcbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuXG4gIHNldFVzZXJJbmZvKHRpdGxlRGF0YSwgZGVzY0RhdGEpIHtcbiAgICBjb25zb2xlLmxvZyh0aGlzLl9uYW1lRWxlbWVudCk7XG4gICAgdGhpcy5fbmFtZUVsZW1lbnQudGV4dENvbnRlbnQgPSB0aXRsZURhdGE7XG4gICAgdGhpcy5fam9iRWxlbWVudC50ZXh0Q29udGVudCA9IGRlc2NEYXRhO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcbiAgY29uc3RydWN0b3IoeyBpdGVtcywgcmVuZGVyZXIgfSwgaXRlbUNvbnRhaW5lckVsKSB7XG4gICAgdGhpcy5faXRlbXMgPSBpdGVtcztcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgIHRoaXMuX2NvbnRhaW5lciA9IGl0ZW1Db250YWluZXJFbDtcbiAgfVxuXG4gIGFkZEl0ZW0oZWxlbWVudCkge1xuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xuICB9XG5cbiAgcmVuZGVySXRlbXMoKSB7XG4gICAgdGhpcy5faXRlbXMuZm9yRWFjaCh0aGlzLl9yZW5kZXJlcik7XG4gIH1cbn1cbiIsImV4cG9ydCBjb25zdCBpbml0aWFsQ2FyZHMgPSBbXG4gIHtcbiAgICBuYW1lOiBcIk5FT00gTmF0dXJlIFJlc2VydmUsIFNhdWRpIEFyYWJpYVwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9pbWFnZXMudW5zcGxhc2guY29tL3Bob3RvLTE2ODI2ODc5ODIyMDQtZjFhNzdkY2MzMDY3P2l4bGliPXJiLTQuMC4zJml4aWQ9TTN3eE1qQTNmREY4TUh4d2FHOTBieTF3WVdkbGZIeDhmR1Z1ZkRCOGZIeDhmQSUzRCUzRCZhdXRvPWZvcm1hdCZmaXQ9Y3JvcCZ3PTMzODcmcT04MFwiLFxuICB9LFxuICB7XG4gICAgbmFtZTogXCJBcmFnbm91ZXQsIEZyYW5jZVwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9pbWFnZXMudW5zcGxhc2guY29tL3Bob3RvLTE2OTMzMzM0OTQyMzctZjE2ZWM5ODlkMTRkP2l4bGliPXJiLTQuMC4zJml4aWQ9TTN3eE1qQTNmREI4TUh4d2FHOTBieTF3WVdkbGZIeDhmR1Z1ZkRCOGZIeDhmQSUzRCUzRCZhdXRvPWZvcm1hdCZmaXQ9Y3JvcCZ3PTM1NDAmcT04MFwiLFxuICB9LFxuICB7XG4gICAgbmFtZTogXCJTdGFyaSBHcmFkLCBDcm9hdGlhXCIsXG4gICAgbGluazogXCJodHRwczovL2ltYWdlcy51bnNwbGFzaC5jb20vcGhvdG8tMTY5MzAzNTY0NzI1Mi04ZWU4OTZmYjc1NGE/aXhsaWI9cmItNC4wLjMmaXhpZD1NM3d4TWpBM2ZEQjhNSHh3YUc5MGJ5MXdZV2RsZkh4OGZHVnVmREI4Zkh4OGZBJTNEJTNEJmF1dG89Zm9ybWF0JmZpdD1jcm9wJnc9MzUzMiZxPTgwXCIsXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIlRvcm9udG8sIE9OLCBDYW5hZGFcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vaW1hZ2VzLnVuc3BsYXNoLmNvbS9waG90by0xNjkzMTI2NDAwMTY3LTcwNGNiZjRhM2YxNj9peGxpYj1yYi00LjAuMyZpeGlkPU0zd3hNakEzZkRCOE1IeHdhRzkwYnkxd1lXZGxmSHg4ZkdWdWZEQjhmSHg4ZkElM0QlM0QmYXV0bz1mb3JtYXQmZml0PWNyb3Amdz0zNTM2JnE9ODBcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiSGFub2ksIFZpZXRuYW1cIixcbiAgICBsaW5rOiBcImh0dHBzOi8vaW1hZ2VzLnVuc3BsYXNoLmNvbS9waG90by0xNjkyODcyMDMxNzA3LTQyMTRkMmY2MmFkYz9peGxpYj1yYi00LjAuMyZpeGlkPU0zd3hNakEzZkRCOE1IeHdhRzkwYnkxd1lXZGxmSHg4ZkdWdWZEQjhmSHg4ZkElM0QlM0QmYXV0bz1mb3JtYXQmZml0PWNyb3Amdz0zMjY0JnE9ODBcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiQWxwYWUgZGkgU2l1c2ksIEl0YWxpYVwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9pbWFnZXMudW5zcGxhc2guY29tL3Bob3RvLTE2OTMxMzcxNjEyMzQtYzAwYmM5N2ZlNDgyP2l4bGliPXJiLTQuMC4zJml4aWQ9TTN3eE1qQTNmREI4TUh4d2FHOTBieTF3WVdkbGZIeDhmR1Z1ZkRCOGZIeDhmQSUzRCUzRCZhdXRvPWZvcm1hdCZmaXQ9Y3JvcCZ3PTM0NDgmcT04MFwiLFxuICB9LFxuXTtcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IobW9kYWxTZWxlY3Rvcikge1xuICAgIHN1cGVyKG1vZGFsU2VsZWN0b3IpO1xuICAgIHRoaXMuX3ByZXZJbWFnZUNhcHRpb24gPSB0aGlzLl9tb2RhbEVsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIFwiLm1vZGFsX19wcmV2aWV3LWltYWdlLWNhcHRpb25cIlxuICAgICk7XG4gICAgdGhpcy5fcHJldk1vZGFsSW1hZ2UgPVxuICAgICAgdGhpcy5fbW9kYWxFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX3ByZXYtaW1hZ2VcIik7XG4gIH1cblxuICBvcGVuKGRhdGEpIHtcbiAgICB0aGlzLl9wcmV2TW9kYWxJbWFnZS5zcmMgPSBkYXRhLl9saW5rO1xuICAgIHRoaXMuX3ByZXZNb2RhbEltYWdlLmFsdCA9IGRhdGEuX25hbWU7XG4gICAgdGhpcy5fcHJldkltYWdlQ2FwdGlvbi50ZXh0Q29udGVudCA9IGRhdGEuX25hbWU7XG4gICAgc3VwZXIub3BlbigpO1xuICB9XG59XG4iXSwibmFtZXMiOlsiUG9wdXAiLCJjb25zdHJ1Y3RvciIsIm1vZGFsU2VsZWN0b3IiLCJ0aGlzIiwiX21vZGFsU2VsZWN0b3IiLCJfbW9kYWxFbGVtZW50IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiX21vZGFsQ2xvc2VCdXR0b24iLCJvcGVuIiwiY2xhc3NMaXN0IiwiYWRkIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9oYW5kbGVFc2NDbG9zZSIsImNsb3NlIiwicmVtb3ZlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImV2dCIsImtleSIsInNldEV2ZW50TGlzdGVuZXJzIiwiZSIsInRhcmdldCIsImNvbnRhaW5zIiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZUZvcm1TdWJtaXQiLCJzdXBlciIsIl9oYW5kbGVGb3JtU3VibWl0IiwiX2Zvcm1JbnB1dHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiX2Zvcm1FbGVtZW50IiwiX2dldElucHV0VmFsdWVzIiwiaW5wdXRWYWx1ZXMiLCJmb3JFYWNoIiwiaW5wdXQiLCJuYW1lIiwidmFsdWUiLCJyZXNldCIsIkNhcmQiLCJkYXRhIiwiY2FyZFNlbGVjdG9yIiwiaGFuZGxlSW1hZ2VDbGljayIsIl9uYW1lIiwiX2xpbmsiLCJsaW5rIiwiX2NhcmRTZWxlY3RvciIsIl9oYW5kbGVJbWFnZUNsaWNrIiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiX2NhcmRFbGVtZW50IiwiX2hhbmRsZUxpa2VCdXR0b24iLCJfaGFuZGxlRGVsZXRlQ2FyZCIsInRvZ2dsZSIsImdldENhcmRFbCIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJjYXJkSW1hZ2VFbCIsInRleHRDb250ZW50Iiwic2V0QXR0cmlidXRlIiwiRm9ybVZhbGlkYXRvciIsInZhbGlkYXRpb25TZXR0aW5ncyIsImZvcm1FbCIsIl9mb3JtRWwiLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJBcnJheSIsImZyb20iLCJfYnV0dG9uRWwiLCJfc2hvd0Vycm9yTWVzc2FnZSIsImZvcm1JbnB1dCIsImVycm9yTWVzc2FnZUVsIiwiaWQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsIl9oaWRlRXJyb3JNZXNzYWdlIiwiX2Rpc2FibGVCdXR0b24iLCJfZW5hYmxlQnV0dG9uIiwicmVtb3ZlQXR0cmlidXRlIiwiX2hhc0ludmFsaWRJbnB1dHMiLCJzb21lIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJyZXNldE1vZGFsVmFsaWRpdHkiLCJ0b2dnbGVCdXR0b25TdGF0ZSIsImVuYWJsZVZhbGlkYXRpb24iLCJwcmV2ZW50RGVmYXVsdCIsImNvbmZpZyIsImZvcm1TZWxlY3RvciIsImNsIiwiY29uc29sZSIsImxvZyIsImJpbmQiLCJwcm9mRWRpdEJ0biIsInByb2ZFZGl0TW9kYWwiLCJwcm9mVGl0bGUiLCJwcm9mRGVzYyIsInByb2ZFZGl0TmFtZUlucHV0IiwicHJvZkVkaXREZXNjSW5wdXQiLCJwcm9mRWRpdEZvcm0iLCJjYXJkTGlzdEVsIiwiY2FyZEFkZE1vZGFsIiwiY2FyZEFkZEJ0biIsImNhcmRBZGRGb3JtIiwidXNlckluZm8iLCJuYW1lRWxlbWVudCIsImpvYkVsZW1lbnQiLCJfbmFtZUVsZW1lbnQiLCJfam9iRWxlbWVudCIsImdldFVzZXJJbmZvIiwicHJvZmlsZU5hbWUiLCJkZXNjcmlwdGlvbiIsInNldFVzZXJJbmZvIiwidGl0bGVEYXRhIiwiZGVzY0RhdGEiLCJzZWN0aW9uIiwiX3JlZiIsIml0ZW1Db250YWluZXJFbCIsIml0ZW1zIiwicmVuZGVyZXIiLCJfaXRlbXMiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiYWRkSXRlbSIsImVsZW1lbnQiLCJwcmVwZW5kIiwicmVuZGVySXRlbXMiLCJpdGVtIiwiY2FyZEVsZW1lbnQiLCJyZW5kZXJDYXJkIiwiZWRpdFByb2ZNb2RhbCIsInByb2ZpbGVEYXRhIiwidGl0bGUiLCJhZGRDYXJkTW9kYWwiLCJ1cmwiLCJjYXJkIiwicHJldkltYWdlTW9kYWwiLCJfcHJldkltYWdlQ2FwdGlvbiIsIl9wcmV2TW9kYWxJbWFnZSIsInNyYyIsImFsdCIsImVkaXRGb3JtVmFsaWRhdG9yIiwiYWRkRm9ybVZhbGlkYXRvciIsImNhcmREYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==
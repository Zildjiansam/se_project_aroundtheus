!function(){"use strict";class e{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=t}addItem(e){this._container.prepend(e)}renderItems(){this._items.forEach(this._renderer)}}class t{constructor(e){this._modalElement=document.querySelector(e),this._modalCloseButton=this._modalElement.querySelector(".modal__close")}open(){this._modalElement.classList.add("modal__opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._modalElement.classList.remove("modal__opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._modalElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()})),this._modalCloseButton.addEventListener("click",(e=>{this.close()}))}}class s extends t{constructor(e,t){super(e),this._handleFormSubmit=t,this._formInputs=this._modalElement.querySelectorAll(".modal__input"),this._formElement=this._modalElement.querySelector(".modal__form"),this._submitBtn=this._modalElement.querySelector(".modal__button"),this._submitBtnText=this._submitBtn.textContent}_getInputValues(){const e={};return this._formInputs.forEach((t=>{e[t.name]=t.value})),e}close(){super.close(),this._formElement.reset()}showLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitBtn.textContent=e?t:this._submitBtnText}setEventListeners(){this._formElement.addEventListener("submit",(()=>{console.log(this._getInputValues()),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}}class r{constructor(e,t,s,r,n){this._isLiked=e.isLiked,this._name=e.name,this._link=e.link,this._id=e._id,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteBtn=r,this._handleLikes=n}_setEventListeners(){this._cardElement.querySelector(".card__heart-button").addEventListener("click",(()=>{this._handleLikes(this)})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>this._handleDeleteBtn(this))),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick(this)}))}getId(){const e=this._id;return console.log(e),e}handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}setIsLiked(e){this._isLiked=e,this._renderLikes()}isLiked(){return this._isLiked}_renderLikes(){this._isLiked?this._cardElement.querySelector(".card__heart-button").classList.add("card__heart-button_active"):this._cardElement.querySelector(".card__heart-button").classList.remove("card__heart-button_active")}getCardEl(){this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0);const e=this._cardElement.querySelector(".card__image"),t=this._cardElement.querySelector(".card__title");return this._renderLikes(),t.textContent=this._name,e.setAttribute("alt",this._name),e.setAttribute("src",this._link),this._setEventListeners(),this._cardElement}}class n{constructor(e,t){this._formEl=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formInputs=Array.from(this._formEl.querySelectorAll(this._inputSelector)),this._buttonEl=this._formEl.querySelector(this._submitButtonSelector)}_showErrorMessage(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this.errorClass)}_hideErrorMessage(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_disableButton(){this._buttonEl.classList.add(this._inactiveButtonClass),this._buttonEl.setAttribute("disabled","")}_enableButton(){this._buttonEl.classList.remove(this._inactiveButtonClass),this._buttonEl.removeAttribute("disabled")}_hasInvalidInputs(){return this._formInputs.some((e=>!e.validity.valid||!e.value))}_checkInputValidity(e){e.validity.valid?this._hideErrorMessage(e):this._showErrorMessage(e)}resetModalValidity(){this._disableButton(),this._formInputs.forEach((e=>{this._hideErrorMessage(e)}))}toggleButtonState(){this._hasInvalidInputs(this._formInputs)?this._disableButton():this._enableButton()}_setEventListeners(){this.toggleButtonState(),this._formInputs.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}const i={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__input-error_visible"},o=document.querySelector("#profile-edit-button"),a=document.querySelector("#profile-edit-modal"),l=document.querySelector(".profile__title"),d=document.querySelector(".profile__description"),c=document.querySelector("#edit_modal-input-name"),h=document.querySelector("#edit-modal-input-desc"),_=a.querySelector(".modal__form"),u=document.querySelector(".profile__image"),m=document.querySelector(".profile__image_edit-button"),E=document.querySelector(".cards__list"),p=document.querySelector("#card-add-modal"),v=document.querySelector("#card-add-button"),f=p.querySelector(".modal__form"),L=document.querySelector("#update-avatar-modal").querySelector(".modal__form"),b=new class{constructor(e,t,s){this._nameElement=e,this._aboutElement=t,this._avatar=s}getUserInfo(){const e={};return e.name=this._nameElement.textContent,e.about=this._aboutElement.textContent,e}setUserInfo(e,t){this._nameElement.textContent=e,this._aboutElement.textContent=t}setUserAvatar(e){this._avatar.src=e}}(l,d,u),S=new s("#profile-edit-modal",(function(e){S.showLoading(!0),B.updateUserInfo(e).then((e=>{b.setUserInfo(e.name,e.about),S.close()})).catch((e=>{console.error(`Error ${e}`)})).finally((()=>{setTimeout((()=>{S.showLoading(!1)}),1e3)}))})),y=new s("#update-avatar-modal",(function(e){y.showLoading(!0),B.updateUserAvatar(e).then((e=>{y.close(),b.setUserAvatar(e.avatar)})).catch((e=>{console.error(`Error ${e}`)})).finally((()=>{setTimeout((()=>{y.showLoading(!1)}),1e3)}))})),g=new s("#card-add-modal",(function(e){g.showLoading(!0);const{title:t,url:s}=e,r={name:t,link:s};B.addNewCard(r).then((e=>{const t=x(e);$.addItem(t),g.close()})).catch((e=>{console.error(`Error ${e}`)})).finally((()=>{setTimeout((()=>{g.showLoading(!1)}),1e3)}))})),C=new class extends t{constructor(e){super(e),this._prevImageCaption=this._modalElement.querySelector(".modal__preview-image-caption"),this._prevModalImage=this._modalElement.querySelector(".modal__prev-image")}open(e){this._prevModalImage.src=e._link,this._prevModalImage.alt=e._name,this._prevImageCaption.textContent=e._name,super.open()}}("#image-preview-modal"),k=new class extends t{constructor(e){super(e),this._formElement=this._modalElement.querySelector(".modal__form"),this._submitBtn=this._modalElement.querySelector(".modal__button"),this._submitBtnText=this._submitBtn.textContent}setSubmitAction(e){this._handleformSubmit=e}showLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Deleting...";this._submitBtn.textContent=e?t:this._submitBtnText}setEventListeners(){this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleformSubmit()})),super.setEventListeners()}}("#card-delete-confirm-modal"),I=new n(i,_),q=new n(i,f),w=new n(i,L),B=new class{constructor(e){this._url=e.baseUrl,this._headers=e.headers}intialSetup(e){return Promise.all(e)}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}updateUserAvatar(e){return fetch(`${this._url}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponse)}loadUserInfo(){return fetch(`${this._url}/users/me`,{headers:this._headers}).then(this._checkResponse)}updateUserInfo(e){return fetch(`${this._url}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.title,about:e.description})}).then(this._checkResponse)}getInitialCards(){return fetch(`${this._url}/cards`,{headers:this._headers}).then(this._checkResponse)}addNewCard(e){return fetch(`${this._url}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._url}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}addCardLike(e){return fetch(`${this._url}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}removeCardLike(e){return fetch(`${this._url}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"e4d91a75-4cb0-43d1-85cd-37dfda4c3b7e","Content-Type":"application/json"}});let $;function x(e){const t=new r(e,"#card-template",A,(function(e){k.open(),k.setSubmitAction((()=>{k.showLoading(!0),B.deleteCard(e.getId()).then((()=>{k.close(),e.handleDeleteCard()})).catch((e=>{console.error(`Error ${e}`)})).finally((()=>{setTimeout((()=>{k.showLoading(!1)}),1e3)}))}))}),(function(e){t.isLiked()?B.removeCardLike(e.getId()).then((e=>{t.setIsLiked(e._isLiked)})).catch((e=>{console.error(`Error ${e}`)})):B.addCardLike(e.getId()).then((e=>{t.setIsLiked(!e._isLiked)})).catch((e=>{console.error(`Error ${e}`)}))}));return t.getCardEl()}function A(e){C.open(e)}B.intialSetup([void B.getInitialCards().then((t=>{$=new e({items:t,renderer:e=>{const t=x(e);$.addItem(t)}},E),$.renderItems()})).catch((e=>{console.error(`Error ${e}`)})),void B.loadUserInfo().then((e=>{b.setUserInfo(e.name,e.about),b.setUserAvatar(e.avatar)})).catch((e=>{console.error(`Error ${e}`)}))]),I.enableValidation(),q.enableValidation(),w.enableValidation(),y.setEventListeners(),S.setEventListeners(),g.setEventListeners(),C.setEventListeners(),k.setEventListeners(),o.addEventListener("click",(()=>{I.resetModalValidity(),c.value=l.textContent,h.value=d.textContent,S.open()})),m.addEventListener("click",(e=>{e.preventDefault(),w.resetModalValidity(),y.open()})),v.addEventListener("click",(e=>{e.preventDefault(),q.resetModalValidity(),g.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,